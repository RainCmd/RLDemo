import kernel.Math

internal native OnUpdateEntity(integer id, string resource, string anim, real3 forward, real3 position)
internal native OnUpdateEntityTransform(integer id, real3 forward, real3 position, bool immediately)
internal native OnRemoveEntity(integer id, bool immediately)

public GameEntity[], integer Add(GameEntity[] values, integer count, GameEntity value)
    if values.GetLength() == count
        var newValues = GameEntity[count * 2]
        for var i = 0; i < count; i++
            newValues[i] = values[i]
        values = newValues
    values[count++] = value
    return values, count

public GameEntity[], integer RemoveSwap(GameEntity[] values, integer count, GameEntity value)
    for var i = 0; i < count; i++
        if values[i] == value
            values[i] = values[ --count]
            break
    return values, count

public class GameEntity
    public Area area
    public string resource
    public string anim
    public real3 forward
    public real3 position
    public Init(integer configId, string anim, real3 forward, real3 position)
        resource = GameConfig.GetEntityConfig(configId).resource
        this.anim = anim
        this.forward = forward
        this.position = position
        worldRoot->Add(this)
        this->OnUpdate()
    public Remove(bool immediately)
        OnRemoveEntity(GetHandleID(), immediately)
        area->Remove(this)
    public Move(real3 position)
        this->Move(forward, position)
    public Move(real3 forward, real3 position)
        this->Move(forward, position, false)
    public Move(real3 forward, real3 position, bool immediately)
        if position != this.position
            area->Move(this, position.xz)
        this.forward = forward
        this.position = position
        OnUpdateEntityTransform(GetHandleID(), forward, position, immediately)
        this->OnUpdate()
    public ShowAnim(string anim)
        if anim != "" && anim != this.anim
            this.anim = anim
            this->OnUpdate()
    private OnUpdate()
        OnUpdateEntity(GetHandleID(), resource, anim, forward, position)