import kernel.Math
space integer enemyCount = 0
space Unit GetNearestHero(real3 position)
    Unit result = null
    real min
    for var i = 0; i < players.GetLength(); i++
        var hero = players[i].hero
        if result == null
            result = hero
            min = (hero.position - position).SqrMagnitude()
        elseif hero != null
            var dis = (hero.position - position).SqrMagnitude()
            if min > dis
                min = dis
                result = hero
            
    return result
private Unit[] GetHeros()
    var cnt = 0; 
    for var i = 0; i < players.GetLength(); i++
        if players[i].hero != null
            cnt++
    var result = Unit[cnt]
    for var i = 0; i < players.GetLength(); i++
        if players[i].hero != null
            result[--cnt] = players[i].hero
    return result

space CreateEnemy()
    var heros = GetHeros()
    var p = heros[GetRandomInt() % heros.GetLength()].position
    var c, var s = SinCos(GetRandomRange( -PI, PI))
    p += real3(c, 0, s) * GetRandomRange(3, 10)
    var u = Unit('U_enemy', monsterPlayer, FORWARD, p)
    enemyCount++
    while u.valid
        var trg = GetNearestHero(u.position)
        if trg != null
            if(trg.position - u.position).Magnitude() <.25 and false
                DamageUnit(u, 10, trg)
                ShowFloatText(trg.position, real3(1, 0, 0), "-10")
                u.Remove(false)
                enemyCount--
            else
                u.Goto(trg.position)
        Wait(1)

private task RemoveDropedMagicNode
private class DropedMagicNode
    private MagicNode node
    private RemoveDropedMagicNode removeTask
    public DropedMagicNode(MagicNode node)
        this.node = node
        onMagicNodePick.Add(global OnPickNode & OnPickNode)
        removeTask = start RemoveMagicNode()
    private OnPickNode(Player picker, MagicNode node)
        if node == this.node
            removeTask.Abort()
    private RemoveMagicNode()
        Wait(10)
        node.Remove()

space OnUnitDead(Unit killer, Unit dead)
    if dead.configId == 'U_enemy'
        var cfgs = GameConfig.entityConfigs
        var cfg = cfgs[GetRandomInt() % cfgs.GetLength()]
        var node = MagicNode(cfg.id, dead.position)
        DropedMagicNode(node)

public SpawnEnemy()
    AnyUnitDeath.Add(UnitDeath & OnUnitDead)
    while
        wait
        if enemyCount < 10
            start CreateEnemy()