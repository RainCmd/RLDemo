import GameConfig
import Collections
import Utils

internal native OnUpdateBuff(integer id, integer config, integer number, real startTime, real endTime)
internal native OnRemoveBuff(integer id)

public class Buff
    public BuffConfig config
    public Unit owner
    public Unit source
    public integer number
    public real startTime
    public real endTime
    public OnCreate(BuffConfig cfg, Unit source, Unit owner)
        this.config = cfg
        this.source = source
        this.owner = owner
        number = 1
        startTime = gameTime
        endTime = cfg.duration
        Update()
    public OnUpdate(Unit source)
        if config.accumulation
            number++
        if config.refresh
            startTime = gameTime
            endTime = config.duration
        Update()
    private Update()
        OnUpdateBuff(GetHandleID(), config.id, number, startTime, endTime)

    public Remove()
        OnRemoveBuff(GetHandleID())

space StrDictionary buffTypeCache = StrDictionary()
public Buff CreateBuff(BuffConfig cfg)
    var f, var r = buffTypeCache.TryGet(cfg.logic)
    if !f
        r = FindType(cfg.logic, <Buff>)
        buffTypeCache.Set(cfg.logic, r)
    return CreateInstance(type& r) as Buff