import GameConfig
import Collections

internal native OnUpdateUnitEntity(integer id, integer player, UnitType unitType, real hp, real maxHP, real mp, real maxMP)
internal native OnRemoveUnitEntity(integer id)
internal native OnUnitBuffChanged(integer unitId, integer buffId, bool addition)

space List unitPool = List()//<List>
public Unit CreateUnit(integer configId, integer player, real3 forward, real3 position)
    var result = unitPool.Count() > 0 ? Unit& unitPool.Pop() : Unit()
    result.Init(configId, player, forward, position)
    return result

public class Unit GameEntity
    public integer player
    public UnitType unitType
    public real hp
    public real maxHP
    public real mp
    public real maxMP
    public real moveSpeed
    public List buffs = List()//<Buff>
    public Init(integer configId, integer player, real3 forward, real3 position)
        var config = GetUnitConfig(configId)
        base.Init(config.entityConfigId, "stand", forward, position)
        this.player = player
        unitType = config.unitType
        hp = maxHP = config.hp
        mp = maxMP = config.mp
        moveSpeed = config.speed
        this->OnUpdate()
    public Remove(bool immediately)
        for var i = 0; i < buffs.Count(); i++
            OnUnitBuffChanged(GetHandleID(), buffs.Get(i).GetHandleID(), false)
        OnRemoveUnitEntity(GetHandleID())
        base.Remove(immediately)
        unitPool.Add(this)
    public Add(Buff buff)
        buffs.Add(buff)
        buff.Update()
        OnUnitBuffChanged(GetHandleID(), buff.GetHandleID(), true)
    public bool Accumulation(Buff buff)
        for var i = 0; i < buffs.Count(); i++
            var b = Buff& buffs.Get(i)
            if b.configId == buff.configId && b.source == buff.source
                b.number++
                b.Update()
                OnUnitBuffChanged(GetHandleID(), b.GetHandleID(), true)
                return false
        Add(buff)
        return true
    public Remove(Buff buff)
        OnUnitBuffChanged(GetHandleID(), buff.GetHandleID(), false)
        buffs.Remove(buff)
        buff.Remove()
    private OnUpdate()
        OnUpdateUnitEntity(GetHandleID(), player, unitType, hp, maxHP, mp, maxMP)